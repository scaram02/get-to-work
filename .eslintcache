[{"/Users/amelia/IronhackBootcampFolders/practice/jobs/src/reportWebVitals.js":"1","/Users/amelia/IronhackBootcampFolders/practice/jobs/src/App.js":"2","/Users/amelia/IronhackBootcampFolders/practice/jobs/src/components/AddJob.js":"3","/Users/amelia/IronhackBootcampFolders/practice/jobs/src/components/JobList.js":"4","/Users/amelia/IronhackBootcampFolders/practice/jobs/src/components/JobView.js":"5","/Users/amelia/IronhackBootcampFolders/practice/jobs/src/index.js":"6","/Users/amelia/IronhackBootcampFolders/practice/jobs/src/components/EditJob.js":"7"},{"size":362,"mtime":1612135755166,"results":"8","hashOfConfig":"9"},{"size":755,"mtime":1613619837037,"results":"10","hashOfConfig":"9"},{"size":1370,"mtime":1613620444294,"results":"11","hashOfConfig":"9"},{"size":472,"mtime":1613621327093,"results":"12","hashOfConfig":"9"},{"size":1822,"mtime":1613614289582,"results":"13","hashOfConfig":"9"},{"size":541,"mtime":1612142150106,"results":"14","hashOfConfig":"9"},{"size":1368,"mtime":1613614691668,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"weikj8",{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/amelia/IronhackBootcampFolders/practice/jobs/src/reportWebVitals.js",[],["33","34"],"/Users/amelia/IronhackBootcampFolders/practice/jobs/src/App.js",["35","36","37"],"/Users/amelia/IronhackBootcampFolders/practice/jobs/src/components/AddJob.js",[],"/Users/amelia/IronhackBootcampFolders/practice/jobs/src/components/JobList.js",[],"/Users/amelia/IronhackBootcampFolders/practice/jobs/src/components/JobView.js",["38","39","40"],"import React, {useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport EditJob from './EditJob'\n\n\nconst JobView = props => {\n\n    const id = props.match.params.id\n    const job = props.jobs && props.jobs.find(job => {\n        return job.id == id\n        // console.log(\"Job dot id\", typeof job.id, \"ID\",typeof  id, job.id === Number(id))\n    })\n\n\n    const deleteJob = id => {\n        props.setJobs(props.jobs.filter((job) => job.id != id))\n        props.history.push('/')\n    }\n\n\n\n    //edit\n    const blankForm = {id: '', jobTitle: '', compName: '', applyBy: '', url: ''}\n    const [currentJob, setCurrentJob] = useState(blankForm)\n    const [editingJob, setEditingJob] = useState(false)\n\n    const toggleEditingJob = job => {\n        setEditingJob(!editingJob)\n\n        setCurrentJob({id: job.id, compName: job.compName, jobTitle: job.jobTitle, url: job.url}) \n    }\n\n    const updateJob = (id, updatedJob) => {\n        setEditingJob(!editingJob)\n        props.setJobs(props.jobs.map((job) => (job.id == id? updatedJob: job)))\n    }\n\n    const showJob = <p>See {job.url} for more info</p>\n\n    return (\n        <div style={{backgroundColor: \"blue\"}}>\n            <h1>{job.jobTitle}</h1>\n            <h2>{job.compName}</h2>\n            <h3>{job.applyBy}</h3>\n            {job.url && showJob}\n           <button onClick={() => toggleEditingJob(job)}>TogglEdit</button>\n            {editingJob? \n            (\n               <EditJob \n               job={job} \n               setEditingJob={setEditingJob} \n               editingJob={editingJob} \n               updateJob={updateJob} \n               currentJob={currentJob}/>  \n            ) : <div/>}\n\n            <button onClick={() => deleteJob(job.id)}>Delete me</button>\n            <Link to=\"/\">back</Link>\n        </div>\n    )\n}\n\nexport default JobView\n","/Users/amelia/IronhackBootcampFolders/practice/jobs/src/index.js",[],["41","42"],"/Users/amelia/IronhackBootcampFolders/practice/jobs/src/components/EditJob.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":2,"column":16,"nodeType":"49","messageId":"50","endLine":2,"endColumn":22},{"ruleId":"47","severity":1,"message":"51","line":2,"column":24,"nodeType":"49","messageId":"50","endLine":2,"endColumn":28},{"ruleId":"47","severity":1,"message":"52","line":3,"column":8,"nodeType":"49","messageId":"50","endLine":3,"endColumn":12},{"ruleId":"53","severity":1,"message":"54","line":10,"column":23,"nodeType":"55","messageId":"56","endLine":10,"endColumn":25},{"ruleId":"53","severity":1,"message":"57","line":16,"column":57,"nodeType":"55","messageId":"56","endLine":16,"endColumn":59},{"ruleId":"53","severity":1,"message":"54","line":35,"column":55,"nodeType":"55","messageId":"56","endLine":35,"endColumn":57},{"ruleId":"43","replacedBy":"58"},{"ruleId":"45","replacedBy":"59"},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'logo' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.",["60"],["61"],"no-global-assign","no-unsafe-negation"]