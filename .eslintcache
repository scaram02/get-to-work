[{"/Users/amelia/IronhackBootcampFolders/practice/jobs/src/reportWebVitals.js":"1","/Users/amelia/IronhackBootcampFolders/practice/jobs/src/App.js":"2","/Users/amelia/IronhackBootcampFolders/practice/jobs/src/components/AddJob.js":"3","/Users/amelia/IronhackBootcampFolders/practice/jobs/src/components/JobList.js":"4","/Users/amelia/IronhackBootcampFolders/practice/jobs/src/components/JobView.js":"5","/Users/amelia/IronhackBootcampFolders/practice/jobs/src/index.js":"6","/Users/amelia/IronhackBootcampFolders/practice/jobs/src/components/EditJob.js":"7"},{"size":362,"mtime":1612135755166,"results":"8","hashOfConfig":"9"},{"size":678,"mtime":1613439420191,"results":"10","hashOfConfig":"9"},{"size":1370,"mtime":1612151625644,"results":"11","hashOfConfig":"9"},{"size":387,"mtime":1613439287205,"results":"12","hashOfConfig":"9"},{"size":1701,"mtime":1613438545868,"results":"13","hashOfConfig":"9"},{"size":541,"mtime":1612142150106,"results":"14","hashOfConfig":"9"},{"size":1540,"mtime":1613439585481,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"weikj8",{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/amelia/IronhackBootcampFolders/practice/jobs/src/reportWebVitals.js",[],["34","35"],"/Users/amelia/IronhackBootcampFolders/practice/jobs/src/App.js",["36","37","38"],"import React, {useState} from 'react'\nimport {Route, Switch, Link} from 'react-router-dom'\nimport logo from './logo.svg';\nimport './App.css';\nimport AddJob from './components/AddJob'\nimport JobList from './components/JobList'\nimport JobView from './components/JobView'\n\nconst App = () => {\nconst [jobs, setJobs] = useState([])\n\n\nconst addJob = job => {\n  job.id = jobs.length+1;\n  setJobs([...jobs, job])\n}\n\n\n\n\n  return (\n    <div>\n    <Route exact path=\"/\" />\n     <AddJob addJob={addJob}/>\n    <JobList jobs={jobs} />\n\n\n    <Route exact path=\"/:id\"\n  render={(props) => (\n  <JobView {...props} \n  jobs={jobs} setJobs={setJobs} \n/> \n)}/>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/amelia/IronhackBootcampFolders/practice/jobs/src/components/AddJob.js",[],"/Users/amelia/IronhackBootcampFolders/practice/jobs/src/components/JobList.js",[],"/Users/amelia/IronhackBootcampFolders/practice/jobs/src/components/JobView.js",["39","40","41","42"],"import React, {useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport EditJob from './EditJob'\n\n\nconst JobView = props => {\n\n    const id = props.match.params.id\n    const job = props.jobs && props.jobs.find(job => {\n        return job.id == id\n        // console.log(\"Job dot id\", typeof job.id, \"ID\",typeof  id, job.id === Number(id))\n    })\n\n\n    const deleteJob = id => {\n        props.setJobs(props.jobs.filter((job) => job.id != id))\n        props.history.push('/')\n    }\n\n\n\n    //edit\n    const blankForm = {id: null, jobTitle: '', compName: '', applyBy: '', url: ''}\n    const [currentJob, setCurrentJob] = useState(blankForm)\n    const [editingJob, setEditingJob] = useState(false)\n\n    const toggleEditingJob = job => {\n        setEditingJob(!editingJob)\n\n        setCurrentJob({id: job.id, compName: job.compName, jobTitle: job.jobTitle, url: job.url})\n    }\n\n    const updateJob = (id, updatedJob) => {\n        setEditingJob(false)\n\n        setCurrentJob(props.jobs.map((job) => (job.id === id? updatedJob: job)))\n        console.log('oh hey im on jobview and im the updateJob function showing the current job', currentJob)\n    }\n\n\n    return (\n        <div style={{backgroundColor: \"blue\"}}>\n            <h1>{job.jobTitle}</h1>\n            <h2>{job.compName}</h2>\n            <button onClick={() => toggleEditingJob(job)}>TogglEdit</button>\n            {editingJob? (\n               <EditJob job={job} editingJob={editingJob} updateJob={updateJob} currentJob={currentJob} job={job}/>  \n            ) : <div/>}\n            <button onClick={() => deleteJob(job.id)}>Delete me</button>\n            {/* <Link to=\"/\">back</Link> */}\n        </div>\n    )\n}\n\nexport default JobView\n","/Users/amelia/IronhackBootcampFolders/practice/jobs/src/index.js",[],["43","44"],"/Users/amelia/IronhackBootcampFolders/practice/jobs/src/components/EditJob.js",["45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":2,"column":16,"nodeType":"52","messageId":"53","endLine":2,"endColumn":22},{"ruleId":"50","severity":1,"message":"54","line":2,"column":24,"nodeType":"52","messageId":"53","endLine":2,"endColumn":28},{"ruleId":"50","severity":1,"message":"55","line":3,"column":8,"nodeType":"52","messageId":"53","endLine":3,"endColumn":12},{"ruleId":"50","severity":1,"message":"54","line":2,"column":9,"nodeType":"52","messageId":"53","endLine":2,"endColumn":13},{"ruleId":"56","severity":1,"message":"57","line":10,"column":23,"nodeType":"58","messageId":"59","endLine":10,"endColumn":25},{"ruleId":"56","severity":1,"message":"60","line":16,"column":57,"nodeType":"58","messageId":"59","endLine":16,"endColumn":59},{"ruleId":"61","severity":1,"message":"62","line":47,"column":105,"nodeType":"63","endLine":47,"endColumn":114},{"ruleId":"46","replacedBy":"64"},{"ruleId":"48","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":23,"column":8,"nodeType":"68","endLine":23,"endColumn":15,"suggestions":"69"},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'logo' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["70"],["71"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'job'. Either include it or remove the dependency array.","ArrayExpression",["72"],"no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},"Update the dependencies array to be: [job, props]",{"range":"75","text":"76"},[631,638],"[job, props]"]